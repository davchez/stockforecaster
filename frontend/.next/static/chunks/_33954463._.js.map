{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/Desktop/Work/stockforecaster/frontend/src/lib/api.ts"],"sourcesContent":["// Importing env variables (API URL and Key from .env.local)\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\r\nconst API_KEY = process.env.NEXT_PUBLIC_API_KEY;\r\n\r\n// TypeScript interface - Defining shape of data SENDING to the API ensuring structure with POST\r\nexport interface PredictionRequest {\r\n    ticker: string;                 // Stock symbol (\"ticker\")\r\n    start_date: string;             // Format: \"YYYY-MM-DD\"\r\n    end_date: string;               // Format: \"YYYY-MM-DD\"\r\n    include_sentiment: boolean;     // Boolean check on whether or not to include news sentiment\r\n}\r\n\r\n// TypeScript interface - What we GET BACK when sumitting a prediction after a POST request\r\nexport interface PredictionResponse {\r\n    request_id: string;                                          // UUID to track prediction\r\n    status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';   \r\n    message?: string;                                            // Optional message\r\n}\r\n\r\n// TypeScript interface: What we GET BACK when checking status using GET\r\nexport interface StatusResponse {\r\n    request_id: string;\r\n    status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';\r\n    ticker: string;\r\n    created_at: string;                     // ISO timestamp\r\n    updated_at: string;                     // ISO timestamp\r\n\r\n    // Optional result field which only exists when status is 'COMPLETED'\r\n    result?: {\r\n        ticker: string;\r\n        date_range: {\r\n            start: string;\r\n            end: string;\r\n        };\r\n        prediction: {\r\n            predicted_price_20d: string;    // 20 day prediction (i.e. \"$202.33\")\r\n            current_price: string;          // Price of final day in time range\r\n            predicted_change_20d: string;   // Percentage change (i.e. \"-22.38%\") from final day\r\n        };\r\n        model_performance: {\r\n            mape: string;                   // Backtest mean average percent error (e.g. \"3.55%\")\r\n        };\r\n        sentiment?: {                       // Optional; only if include_sentiment is true\r\n            average_sentiment: string;\r\n            news_headlines: Array<{         // Array declares all objects must have these 3 properties\r\n                datetime: string;           // Format: {month}-{day}\r\n                headline: string;           // News headline\r\n                sentiment: string;          // Calculated sentiment from VADER\r\n            }>;\r\n        };\r\n        forecast_timeline: {\r\n            historical_days: number;        // Number of trading days LSTM used to train\r\n            forecast_days: number;          // Number of days out LSTM is forecasting\r\n            total_days: number;             // Total number of days (history + forecast)\r\n        };\r\n    };\r\n\r\n    // 'error' field for if status is 'FAILED'\r\n    error?: string;                  \r\n}\r\n\r\n// Function: Submits a new predction request\r\n// Returns: returns a \"promise\" that resolves to PredictionResponse\r\n// Note: Similar to Future in Dart\r\nexport async function submitPrediction(request: PredictionRequest): Promise<PredictionResponse> {\r\n    // Make HTTP POST request to /predict endpoint of API\r\n    const response = await fetch(`${API_URL}/predict`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': API_KEY!,\r\n        },\r\n        body: JSON.stringify(request)               // Similar to json.dump in Python, I believe\r\n    });\r\n\r\n    // If request failed for internal or malformed request\r\n    if (!response.ok) {\r\n        throw new Error(`Failed to submit prediction: ${response.statusText}`)\r\n    }\r\n\r\n    // Parse JSON response and return it\r\n    return response.json();\r\n}\r\n\r\n// Function: Checks status of existing prediction\r\n// Returns: Promise that resolves to StatusResponse\r\nexport async function checkStatus(requestId: string): Promise<StatusResponse> {\r\n    // Make HTTP GET request to /status/{requestID} endpoint of API\r\n    const response = await fetch(`${API_URL}/status/${requestId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-api-key': API_KEY!,\r\n        },\r\n    });\r\n\r\n    // If request failed for internal or malformed request\r\n    if (!response.ok) {\r\n        throw new Error(`Failed to check status: ${response.statusText}`);\r\n    }\r\n\r\n    // Parse JSON response and return it\r\n    return response.json();\r\n}"],"names":[],"mappings":"AAAA,4DAA4D;;;;;;;AAC5C;AAAhB,MAAM;AACN,MAAM;AA8DC,eAAe,iBAAiB,OAA0B;IAC7D,qDAAqD;IACrD,MAAM,WAAW,MAAM,MAAM,AAAC,GAAU,OAAR,SAAQ,aAAW;QAC/C,QAAQ;QACR,SAAS;YACL,gBAAgB;YAChB,aAAa;QACjB;QACA,MAAM,KAAK,SAAS,CAAC,SAAuB,4CAA4C;IAC5F;IAEA,sDAAsD;IACtD,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM,AAAC,gCAAmD,OAApB,SAAS,UAAU;IACvE;IAEA,oCAAoC;IACpC,OAAO,SAAS,IAAI;AACxB;AAIO,eAAe,YAAY,SAAiB;IAC/C,+DAA+D;IAC/D,MAAM,WAAW,MAAM,MAAM,AAAC,GAAoB,OAAlB,SAAQ,YAAoB,OAAV,YAAa;QAC3D,QAAQ;QACR,SAAS;YACL,aAAa;QACjB;IACJ;IAEA,sDAAsD;IACtD,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,IAAI,MAAM,AAAC,2BAA8C,OAApB,SAAS,UAAU;IAClE;IAEA,oCAAoC;IACpC,OAAO,SAAS,IAAI;AACxB","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/Desktop/Work/stockforecaster/frontend/src/app/page.tsx"],"sourcesContent":["// Telling next.js this is a client component and not server rendered\r\n// Needed since we're using React hooks and browser APIs\r\n'use client';\r\n\r\n/*\r\nNote: TypeScript language (superset of JavaScript), React Framework (UI Library)\r\n      - Includes some level of JavaScript as well though (\"functional programming\" looks semi-OOP)\r\n\r\nNote: Server-Side Rendering (SSR): AWS Server (Next.js) -> Generates HTML -> Sends to browser\r\n      - Code runs on Node.js server\r\n      - No access to browser APIs (no window, document, localStorage)\r\n      - Happens ONCE when page loads\r\n      - Good for SEO, fast initial load\r\n\r\nNote: Client-Side Rendering (CSR): Browser receives minimal HTML -> JavaScript runs in Browser -> builds UI\r\n      - Code runs in user's browser\r\n      - Full access to browser APIs\r\n      - Can be interactive (responds to user actions)\r\n      - NECESSARY for dynamic apps\r\n\r\nNote: React Hooks\r\n      - useState: Memory (Component memory which is NOT persistent; survives re-renders, NOT page refreshes)\r\n      - useEffect: Side effects (Like an observer that changes once a dependency is changed)\r\n\r\nNote: Browser API and why servers can't use them\r\n      - Browser APIs can only work in browsers because the screen, window, user-specific storage, and interactions don't exist on the server\r\n      - Server only has node.js so nothing much happens\r\n\r\nNote: @/ starts from the src/ directory\r\n*/\r\n\r\nimport { useState, useEffect } from 'react';                // React hooks for state management\r\nimport { submitPrediction, checkStatus } from '@/lib/api';   // Our API functions\r\nimport type { PredictionResponse, StatusResponse } from '@/lib/api';        // TypeScript type for the response\r\n\r\nexport default function Home() {\r\n\r\n  // ================================ FORM INPUT STATE ===============================\r\n\r\n  const [ticker, setTicker] = useState('AAPL');                   // Default AAPL ticker\r\n\r\n  const [startDate, setStartDate] = useState('2024-01-01');       // Default January 1, 2024 start\r\n\r\n  const [endDate, setEndDate] = useState('2025-01-01');           // Default January 1, 2025 end\r\n\r\n  const [includeSentiment, setIncludeSentiment] = useState(true); // Default include sentiment == true\r\n\r\n  // ================================= REQUEST STATE =================================\r\n\r\n  const [requestId, setRequestId] = useState<string | null>(null);    // These lines actually instantiate the function like setRequestId to which variable requestId is updated\r\n  // This can be a string OR null, nothing else.  Also, random, but this triggers a re-render since its a React setter\r\n\r\n  const [status, setStatus] = useState<string | null>(null);\r\n  // Current status: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED' | null\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // ================================= RESULTS STATE =================================\r\n\r\n  const [results, setResults] = useState<StatusResponse | null>(null);\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // ============================ FORM SUBMISSION HANDLER ============================\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    // Prevent default form behavior (page refresh)\r\n    e.preventDefault();\r\n\r\n    // Reset previous results and errors\r\n    setError(null);       // Clearing any old error messages\r\n    setResults(null);     // Clearing any old prediciton results\r\n    setStatus(null);      // Clear old status\r\n    setIsLoading(true);   // Shows loading spinner\r\n\r\n    const MAX_ATTEMPTS = 2;\r\n    let attempt = 0;\r\n\r\n    while (attempt < MAX_ATTEMPTS) {\r\n      try {\r\n        attempt++;\r\n        // Cold start possibly encountered\r\n        if (attempt > 1) {\r\n          console.log(`Retrying attempt ${attempt}/${MAX_ATTEMPTS}...`);\r\n        }\r\n        // Calls our API function from api.ts\r\n        // Does: POST /predict with our form data\r\n        const response = await submitPrediction({\r\n          ticker,\r\n          start_date: startDate,\r\n          end_date: endDate,\r\n          include_sentiment: includeSentiment\r\n        });\r\n\r\n        // If we're here, it was a success: we got request_id back!\r\n        setRequestId(response.request_id);\r\n        setStatus('PENDING');\r\n        return;\r\n\r\n      } catch (err) {\r\n        // Checking if it's a timeout or cold start error\r\n        const errorMessage = err instanceof Error ? err.message : String(err);\r\n        const isTimeoutError = errorMessage.includes('timeout') ||\r\n                               errorMessage.includes('504') ||\r\n                               errorMessage.includes('Gateway');\r\n        \r\n        // If it's the last attempt OR not a timeout, give up\r\n        if (attempt >= MAX_ATTEMPTS || !isTimeoutError) {\r\n          setIsLoading(false);\r\n          setError(err instanceof Error ? err.message : `Failed to submit request after ${attempt} attempts.`);\r\n          return;\r\n        }\r\n\r\n        // Otherwise, wait a little bit before retrying for cold start issue\r\n        console.log(`Attempt ${attempt} failed: likely cold start, retrying in 5 seconds...`);\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n      }\r\n    }\r\n  };\r\n\r\n  // ================================= POLLING LOGIC =================================\r\n\r\n  useEffect(() => {\r\n    // Code runs when dependencies change (Observer!)\r\n    // If no requestId, don't poll\r\n    if (!requestId) return;\r\n\r\n    // If already completed or failed, don't poll\r\n    if (status === 'COMPLETED' || status === 'FAILED') return;\r\n\r\n    console.log('Starting to poll for request: ', requestId);\r\n\r\n    let pollCount = 0;        // Poll count to ensure that if a request fails or is hung up, to stop\r\n    const MAX_POLLS = 20;     // 20 * 3 seconds = 1 minute\r\n\r\n    const pollStatus = async () => {\r\n      pollCount++;\r\n\r\n      if (pollCount > MAX_POLLS) {\r\n        clearInterval(pollInterval);\r\n        setIsLoading(false);\r\n        setError('Prediction timed out after 1 minute. Please try again with at least 6 months of training data.')\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Call our API function from api.ts, does GET /status/{requestId}\r\n        const response = await checkStatus(requestId);\r\n\r\n        console.log('Poll response: ', response.status);\r\n\r\n        setStatus(response.status);\r\n\r\n        if (response.status === 'COMPLETED') {\r\n          setResults(response);\r\n          setIsLoading(false);\r\n          clearInterval(pollInterval);  // Stop polling\r\n          console.log('Prediction successfully completed!');\r\n\r\n        } else if (response.status === 'FAILED') {\r\n          setError('Prediction failed! Check your ticker and/or please try again with at least 6 months of training data.');\r\n          setIsLoading(false);\r\n          clearInterval(pollInterval);  // Stop polling\r\n          console.log('Prediction failed');\r\n        }\r\n      } catch (err) {\r\n        console.error('Polling error: ', err);\r\n        setError(err instanceof Error ? err.message : 'Failed to check status');\r\n        setIsLoading(false);\r\n        clearInterval(pollInterval);\r\n      }\r\n    };\r\n\r\n    // Start polling immediately \r\n    pollStatus();\r\n\r\n    // Poll every 3 seconds\r\n    const pollInterval = setInterval(pollStatus, 3000);\r\n\r\n    // Cleanup: When component unmounts (navigates away, closes tab, refreshes page) or requestId changes\r\n    return () => {\r\n      console.log('Stopping polling');\r\n      clearInterval(pollInterval);\r\n    };\r\n    // Removed status from dependencies so website doesn't reload with every new status update (caused UX errors)\r\n  }, [requestId]);\r\n\r\n  return (\r\n    /*\r\n    - min-h-screen: Full viewport, height minimum (minimum: viewport height, but grow taller if content needs; i.e. content fills screen not stretches past)\r\n    - bg-gradient-to-br: Background gradient form top-left to bottom-right\r\n    - from-gray-900 to-gray-900: Dark gray gradient colors\r\n    - p-8: Padding of 32 px (2rem) all round (Tailwind spacing scale...  annoying)\r\n    - Note: \"rem\" is relative to the ROOT (html) font size (i.e. user sets font size to 20px from 40?  REM scales with it)\r\n    */\r\n    <main className = \"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white p-8\">\r\n      {/*Container*/}\r\n      \r\n      <div className = \"max-w-4xl mx-auto\">\r\n\r\n        { /* Header */ }\r\n        <div className = \"text-center mb-12\">\r\n          <h1 className = \"text-5xl font-bold mb-4\">\r\n            StockForecaster\r\n          </h1>\r\n          <p className = \"text-gray-400 text-lg\">\r\n            LSTM-based 20-day stock price forecasting with sentiment analysis\r\n          </p>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form onSubmit={handleSubmit} className = \"bg-gray-800 rounded-lg p-8 shadow-2xl mb-8\">\r\n\r\n          {/* Step 1: Stock Ticker Input*/ }\r\n          <div className=\"mb-6\">\r\n            <label htmlFor = \"ticker\" className = \"block text-sm font-medium mb-2\">\r\n              Stock Ticker Symbol\r\n            </label>\r\n            <input \r\n              type = \"text\"\r\n              id = \"ticker\"\r\n              value = {ticker}\r\n              onChange = {(e) => setTicker(e.target.value.toUpperCase())}\r\n              placeholder = \"AAPL\"\r\n              className = \"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Step 2: Start Date Input */}\r\n          <div className = \"mb-6\">\r\n            <label htmlFor = \"startDate\" className = \"block text-sm font-medium mb-2\">\r\n              Start Date\r\n            </label>\r\n            <input \r\n              type = \"date\"\r\n              id = \"startDate\"\r\n              value = {startDate}\r\n              onChange = {(e) => setStartDate(e.target.value)}\r\n              className = \"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Step 3: End Date Input */}\r\n          <div className = \"mb-6\">\r\n            <label htmlFor = \"startDate\" className = \"block text-sm font-medium mb-2\">\r\n              Start Date\r\n            </label>\r\n            <input \r\n              type = \"date\"\r\n              id = \"endDate\"\r\n              value = {endDate}\r\n              onChange = {(e) => setEndDate(e.target.value)}\r\n              className = \"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Step 4: Sentiment Check */}\r\n          <div className = \"mb-8 flex items-center\">\r\n            <input\r\n              type = \"checkbox\"\r\n              id = \"includeSentiment\"\r\n              checked = {includeSentiment}\r\n              onChange = {(e) => setIncludeSentiment(e.target.checked)}\r\n              className = \"w-5 h-5 bg-gray-700 border-gray-600 rounded focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <label htmlFor = \"includeSentiment\" className = \"ml-3 text-sm\">\r\n              Include sentiment analysis (scrapes recent news)\r\n            </label>\r\n          </div>\r\n\r\n          {/* Step 5: Submit Button, submit request form to API */}\r\n          <button \r\n            type = \"submit\"\r\n            disabled = {isLoading}\r\n            className = \"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-semibold py-4 px-6 rounded-lg transition-colors duration-200\"\r\n          >\r\n            {isLoading ? 'Training Model...' : 'Get Prediction'}\r\n          </button>\r\n        </form>\r\n\r\n        {/* Loading State */}\r\n        {isLoading && (\r\n          <div className = \"text-center p-8\">\r\n            <div className = \"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-white mb-4\"></div>\r\n            <p className = \"text-lg\">{status === 'PENDING' ? 'Submitting request...' : 'Training model...'}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Error State */} \r\n        {error && (\r\n          <div className = \"bg-red-900 border border-red-700 text-white px-6 py-4 rounded-lg\">\r\n            <p className = \"font-semibold\">Error:</p>\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Results Display */}\r\n        {results && results.result && results.request_id === requestId && (\r\n          <div className=\"bg-gray-800 rounded-lg p-8 shadow-2xl\">\r\n            <h2 className=\"text-3xl font-bold mb-6\">{results.result.ticker} 4-Week Price Forecast</h2>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-6 mb-6\">\r\n              <div>\r\n                <p className=\"text-gray-400 text-sm\">Current Price</p>\r\n                <p className=\"text-2xl font-bold\">{results.result.prediction.current_price}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400 text-sm\">20-Day Prediction</p>\r\n                <p className=\"text-2xl font-bold\">{results.result.prediction.predicted_price_20d}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400 text-sm\">Expected Change</p>\r\n                <p className={`text-2xl font-bold ${parseFloat(results.result.prediction.predicted_change_20d) > 0 \r\n                  ? 'text-green-400' : 'text-red-400'}`}>\r\n                    {results.result.prediction.predicted_change_20d}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400 text-sm\">Model Accuracy (100% - MAPE)</p>\r\n                <p className=\"text-2xl font-bold\">{100.00 - parseFloat(results.result.model_performance.mape)}%</p>\r\n              </div>\r\n              {results.result.sentiment && (\r\n                <div>\r\n                  <p className=\"text-gray-400 text-sm\">Average Sentiment</p>\r\n                  <p className={`text-2xl font-bold ${parseFloat(results.result.sentiment.average_sentiment) > 0 \r\n                    ? 'text-green-400' : 'text-red-400'}`}>\r\n                      {(parseFloat(results.result.sentiment.average_sentiment) * 100).toFixed(2)}%\r\n                    </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        </div>\r\n    </main>\r\n  );\r\n};"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,wDAAwD;;;;;;AAGxD;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,GAEA,mRAA4D,mCAAmC;AAC/F,0MAA6D,oBAAoB;;;AA9BjF;;;AAiCe,SAAS;;IAEtB,oFAAoF;IAEpF,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAC,SAA2B,sBAAsB;IAEtF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC,eAAqB,gCAAgC;IAEhG,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC,eAAyB,8BAA8B;IAE9F,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,yKAAQ,EAAC,OAAO,oCAAoC;IAEpG,oFAAoF;IAEpF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAgB,OAAU,yGAAyG;IAC7K,oHAAoH;IAEpH,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAgB;IACpD,2EAA2E;IAE3E,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAE3C,oFAAoF;IAEpF,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAwB;IAE9D,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAgB;IAElD,oFAAoF;IAEpF,MAAM,eAAe,OAAO;QAC1B,+CAA+C;QAC/C,EAAE,cAAc;QAEhB,oCAAoC;QACpC,SAAS,OAAa,kCAAkC;QACxD,WAAW,OAAW,sCAAsC;QAC5D,UAAU,OAAY,mBAAmB;QACzC,aAAa,OAAS,wBAAwB;QAE9C,MAAM,eAAe;QACrB,IAAI,UAAU;QAEd,MAAO,UAAU,aAAc;YAC7B,IAAI;gBACF;gBACA,kCAAkC;gBAClC,IAAI,UAAU,GAAG;oBACf,QAAQ,GAAG,CAAC,AAAC,oBAA8B,OAAX,SAAQ,KAAgB,OAAb,cAAa;gBAC1D;gBACA,qCAAqC;gBACrC,yCAAyC;gBACzC,MAAM,WAAW,MAAM,IAAA,wIAAgB,EAAC;oBACtC;oBACA,YAAY;oBACZ,UAAU;oBACV,mBAAmB;gBACrB;gBAEA,2DAA2D;gBAC3D,aAAa,SAAS,UAAU;gBAChC,UAAU;gBACV;YAEF,EAAE,OAAO,KAAK;gBACZ,iDAAiD;gBACjD,MAAM,eAAe,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO;gBACjE,MAAM,iBAAiB,aAAa,QAAQ,CAAC,cACtB,aAAa,QAAQ,CAAC,UACtB,aAAa,QAAQ,CAAC;gBAE7C,qDAAqD;gBACrD,IAAI,WAAW,gBAAgB,CAAC,gBAAgB;oBAC9C,aAAa;oBACb,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG,AAAC,kCAAyC,OAAR,SAAQ;oBACxF;gBACF;gBAEA,oEAAoE;gBACpE,QAAQ,GAAG,CAAC,AAAC,WAAkB,OAAR,SAAQ;gBAC/B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;YACnD;QACF;IACF;IAEA,oFAAoF;IAEpF,IAAA,0KAAS;0BAAC;YACR,iDAAiD;YACjD,8BAA8B;YAC9B,IAAI,CAAC,WAAW;YAEhB,6CAA6C;YAC7C,IAAI,WAAW,eAAe,WAAW,UAAU;YAEnD,QAAQ,GAAG,CAAC,kCAAkC;YAE9C,IAAI,YAAY,GAAU,sEAAsE;YAChG,MAAM,YAAY,IAAQ,4BAA4B;YAEtD,MAAM;6CAAa;oBACjB;oBAEA,IAAI,YAAY,WAAW;wBACzB,cAAc;wBACd,aAAa;wBACb,SAAS;wBACT;oBACF;oBAEA,IAAI;wBACF,kEAAkE;wBAClE,MAAM,WAAW,MAAM,IAAA,mIAAW,EAAC;wBAEnC,QAAQ,GAAG,CAAC,mBAAmB,SAAS,MAAM;wBAE9C,UAAU,SAAS,MAAM;wBAEzB,IAAI,SAAS,MAAM,KAAK,aAAa;4BACnC,WAAW;4BACX,aAAa;4BACb,cAAc,eAAgB,eAAe;4BAC7C,QAAQ,GAAG,CAAC;wBAEd,OAAO,IAAI,SAAS,MAAM,KAAK,UAAU;4BACvC,SAAS;4BACT,aAAa;4BACb,cAAc,eAAgB,eAAe;4BAC7C,QAAQ,GAAG,CAAC;wBACd;oBACF,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,mBAAmB;wBACjC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;wBAC9C,aAAa;wBACb,cAAc;oBAChB;gBACF;;YAEA,6BAA6B;YAC7B;YAEA,uBAAuB;YACvB,MAAM,eAAe,YAAY,YAAY;YAE7C,qGAAqG;YACrG;kCAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ,cAAc;gBAChB;;QACA,6GAA6G;QAC/G;yBAAG;QAAC;KAAU;IAEd,OACE;;;;;;IAMA,iBACA,6LAAC;QAAK,WAAY;kBAGhB,cAAA,6LAAC;YAAI,WAAY;;8BAGf,6LAAC;oBAAI,WAAY;;sCACf,6LAAC;4BAAG,WAAY;sCAA0B;;;;;;sCAG1C,6LAAC;4BAAE,WAAY;sCAAwB;;;;;;;;;;;;8BAMzC,6LAAC;oBAAK,UAAU;oBAAc,WAAY;;sCAGxC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,SAAU;oCAAS,WAAY;8CAAiC;;;;;;8CAGvE,6LAAC;oCACC,MAAO;oCACP,IAAK;oCACL,OAAS;oCACT,UAAY,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW;oCACvD,aAAc;oCACd,WAAY;oCACZ,QAAQ;;;;;;;;;;;;sCAKZ,6LAAC;4BAAI,WAAY;;8CACf,6LAAC;oCAAM,SAAU;oCAAY,WAAY;8CAAiC;;;;;;8CAG1E,6LAAC;oCACC,MAAO;oCACP,IAAK;oCACL,OAAS;oCACT,UAAY,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;oCAC9C,WAAY;oCACZ,QAAQ;;;;;;;;;;;;sCAKZ,6LAAC;4BAAI,WAAY;;8CACf,6LAAC;oCAAM,SAAU;oCAAY,WAAY;8CAAiC;;;;;;8CAG1E,6LAAC;oCACC,MAAO;oCACP,IAAK;oCACL,OAAS;oCACT,UAAY,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;oCAC5C,WAAY;oCACZ,QAAQ;;;;;;;;;;;;sCAKZ,6LAAC;4BAAI,WAAY;;8CACf,6LAAC;oCACC,MAAO;oCACP,IAAK;oCACL,SAAW;oCACX,UAAY,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,OAAO;oCACvD,WAAY;;;;;;8CAEd,6LAAC;oCAAM,SAAU;oCAAmB,WAAY;8CAAe;;;;;;;;;;;;sCAMjE,6LAAC;4BACC,MAAO;4BACP,UAAY;4BACZ,WAAY;sCAEX,YAAY,sBAAsB;;;;;;;;;;;;gBAKtC,2BACC,6LAAC;oBAAI,WAAY;;sCACf,6LAAC;4BAAI,WAAY;;;;;;sCACjB,6LAAC;4BAAE,WAAY;sCAAW,WAAW,YAAY,0BAA0B;;;;;;;;;;;;gBAK9E,uBACC,6LAAC;oBAAI,WAAY;;sCACf,6LAAC;4BAAE,WAAY;sCAAgB;;;;;;sCAC/B,6LAAC;sCAAG;;;;;;;;;;;;gBAKP,WAAW,QAAQ,MAAM,IAAI,QAAQ,UAAU,KAAK,2BACnD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;;gCAA2B,QAAQ,MAAM,CAAC,MAAM;gCAAC;;;;;;;sCAE/D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,6LAAC;4CAAE,WAAU;sDAAsB,QAAQ,MAAM,CAAC,UAAU,CAAC,aAAa;;;;;;;;;;;;8CAE5E,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,6LAAC;4CAAE,WAAU;sDAAsB,QAAQ,MAAM,CAAC,UAAU,CAAC,mBAAmB;;;;;;;;;;;;8CAElF,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,6LAAC;4CAAE,WAAW,AAAC,sBACuB,OADF,WAAW,QAAQ,MAAM,CAAC,UAAU,CAAC,oBAAoB,IAAI,IAC7F,mBAAmB;sDAClB,QAAQ,MAAM,CAAC,UAAU,CAAC,oBAAoB;;;;;;;;;;;;8CAGrD,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,6LAAC;4CAAE,WAAU;;gDAAsB,SAAS,WAAW,QAAQ,MAAM,CAAC,iBAAiB,CAAC,IAAI;gDAAE;;;;;;;;;;;;;gCAE/F,QAAQ,MAAM,CAAC,SAAS,kBACvB,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,6LAAC;4CAAE,WAAW,AAAC,sBACuB,OADF,WAAW,QAAQ,MAAM,CAAC,SAAS,CAAC,iBAAiB,IAAI,IACzF,mBAAmB;;gDAClB,CAAC,WAAW,QAAQ,MAAM,CAAC,SAAS,CAAC,iBAAiB,IAAI,GAAG,EAAE,OAAO,CAAC;gDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjG;GAhTwB;KAAA","debugId":null}},
    {"offset": {"line": 616, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/Desktop/Work/stockforecaster/frontend/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js"],"sourcesContent":["/**\r\n * @license React\r\n * react-jsx-dev-runtime.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\"use strict\";\r\n\"production\" !== process.env.NODE_ENV &&\r\n  (function () {\r\n    function getComponentNameFromType(type) {\r\n      if (null == type) return null;\r\n      if (\"function\" === typeof type)\r\n        return type.$$typeof === REACT_CLIENT_REFERENCE\r\n          ? null\r\n          : type.displayName || type.name || null;\r\n      if (\"string\" === typeof type) return type;\r\n      switch (type) {\r\n        case REACT_FRAGMENT_TYPE:\r\n          return \"Fragment\";\r\n        case REACT_PROFILER_TYPE:\r\n          return \"Profiler\";\r\n        case REACT_STRICT_MODE_TYPE:\r\n          return \"StrictMode\";\r\n        case REACT_SUSPENSE_TYPE:\r\n          return \"Suspense\";\r\n        case REACT_SUSPENSE_LIST_TYPE:\r\n          return \"SuspenseList\";\r\n        case REACT_ACTIVITY_TYPE:\r\n          return \"Activity\";\r\n      }\r\n      if (\"object\" === typeof type)\r\n        switch (\r\n          (\"number\" === typeof type.tag &&\r\n            console.error(\r\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\r\n            ),\r\n          type.$$typeof)\r\n        ) {\r\n          case REACT_PORTAL_TYPE:\r\n            return \"Portal\";\r\n          case REACT_CONTEXT_TYPE:\r\n            return type.displayName || \"Context\";\r\n          case REACT_CONSUMER_TYPE:\r\n            return (type._context.displayName || \"Context\") + \".Consumer\";\r\n          case REACT_FORWARD_REF_TYPE:\r\n            var innerType = type.render;\r\n            type = type.displayName;\r\n            type ||\r\n              ((type = innerType.displayName || innerType.name || \"\"),\r\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\r\n            return type;\r\n          case REACT_MEMO_TYPE:\r\n            return (\r\n              (innerType = type.displayName || null),\r\n              null !== innerType\r\n                ? innerType\r\n                : getComponentNameFromType(type.type) || \"Memo\"\r\n            );\r\n          case REACT_LAZY_TYPE:\r\n            innerType = type._payload;\r\n            type = type._init;\r\n            try {\r\n              return getComponentNameFromType(type(innerType));\r\n            } catch (x) {}\r\n        }\r\n      return null;\r\n    }\r\n    function testStringCoercion(value) {\r\n      return \"\" + value;\r\n    }\r\n    function checkKeyStringCoercion(value) {\r\n      try {\r\n        testStringCoercion(value);\r\n        var JSCompiler_inline_result = !1;\r\n      } catch (e) {\r\n        JSCompiler_inline_result = !0;\r\n      }\r\n      if (JSCompiler_inline_result) {\r\n        JSCompiler_inline_result = console;\r\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\r\n        var JSCompiler_inline_result$jscomp$0 =\r\n          (\"function\" === typeof Symbol &&\r\n            Symbol.toStringTag &&\r\n            value[Symbol.toStringTag]) ||\r\n          value.constructor.name ||\r\n          \"Object\";\r\n        JSCompiler_temp_const.call(\r\n          JSCompiler_inline_result,\r\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n          JSCompiler_inline_result$jscomp$0\r\n        );\r\n        return testStringCoercion(value);\r\n      }\r\n    }\r\n    function getTaskName(type) {\r\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\r\n      if (\r\n        \"object\" === typeof type &&\r\n        null !== type &&\r\n        type.$$typeof === REACT_LAZY_TYPE\r\n      )\r\n        return \"<...>\";\r\n      try {\r\n        var name = getComponentNameFromType(type);\r\n        return name ? \"<\" + name + \">\" : \"<...>\";\r\n      } catch (x) {\r\n        return \"<...>\";\r\n      }\r\n    }\r\n    function getOwner() {\r\n      var dispatcher = ReactSharedInternals.A;\r\n      return null === dispatcher ? null : dispatcher.getOwner();\r\n    }\r\n    function UnknownOwner() {\r\n      return Error(\"react-stack-top-frame\");\r\n    }\r\n    function hasValidKey(config) {\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\r\n        if (getter && getter.isReactWarning) return !1;\r\n      }\r\n      return void 0 !== config.key;\r\n    }\r\n    function defineKeyPropWarningGetter(props, displayName) {\r\n      function warnAboutAccessingKey() {\r\n        specialPropKeyWarningShown ||\r\n          ((specialPropKeyWarningShown = !0),\r\n          console.error(\r\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\r\n            displayName\r\n          ));\r\n      }\r\n      warnAboutAccessingKey.isReactWarning = !0;\r\n      Object.defineProperty(props, \"key\", {\r\n        get: warnAboutAccessingKey,\r\n        configurable: !0\r\n      });\r\n    }\r\n    function elementRefGetterWithDeprecationWarning() {\r\n      var componentName = getComponentNameFromType(this.type);\r\n      didWarnAboutElementRef[componentName] ||\r\n        ((didWarnAboutElementRef[componentName] = !0),\r\n        console.error(\r\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\r\n        ));\r\n      componentName = this.props.ref;\r\n      return void 0 !== componentName ? componentName : null;\r\n    }\r\n    function ReactElement(type, key, props, owner, debugStack, debugTask) {\r\n      var refProp = props.ref;\r\n      type = {\r\n        $$typeof: REACT_ELEMENT_TYPE,\r\n        type: type,\r\n        key: key,\r\n        props: props,\r\n        _owner: owner\r\n      };\r\n      null !== (void 0 !== refProp ? refProp : null)\r\n        ? Object.defineProperty(type, \"ref\", {\r\n            enumerable: !1,\r\n            get: elementRefGetterWithDeprecationWarning\r\n          })\r\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\r\n      type._store = {};\r\n      Object.defineProperty(type._store, \"validated\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: 0\r\n      });\r\n      Object.defineProperty(type, \"_debugInfo\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: null\r\n      });\r\n      Object.defineProperty(type, \"_debugStack\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugStack\r\n      });\r\n      Object.defineProperty(type, \"_debugTask\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugTask\r\n      });\r\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\r\n      return type;\r\n    }\r\n    function jsxDEVImpl(\r\n      type,\r\n      config,\r\n      maybeKey,\r\n      isStaticChildren,\r\n      debugStack,\r\n      debugTask\r\n    ) {\r\n      var children = config.children;\r\n      if (void 0 !== children)\r\n        if (isStaticChildren)\r\n          if (isArrayImpl(children)) {\r\n            for (\r\n              isStaticChildren = 0;\r\n              isStaticChildren < children.length;\r\n              isStaticChildren++\r\n            )\r\n              validateChildKeys(children[isStaticChildren]);\r\n            Object.freeze && Object.freeze(children);\r\n          } else\r\n            console.error(\r\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\r\n            );\r\n        else validateChildKeys(children);\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        children = getComponentNameFromType(type);\r\n        var keys = Object.keys(config).filter(function (k) {\r\n          return \"key\" !== k;\r\n        });\r\n        isStaticChildren =\r\n          0 < keys.length\r\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\r\n            : \"{key: someKey}\";\r\n        didWarnAboutKeySpread[children + isStaticChildren] ||\r\n          ((keys =\r\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\r\n          console.error(\r\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\r\n            isStaticChildren,\r\n            children,\r\n            keys,\r\n            children\r\n          ),\r\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\r\n      }\r\n      children = null;\r\n      void 0 !== maybeKey &&\r\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\r\n      hasValidKey(config) &&\r\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\r\n      if (\"key\" in config) {\r\n        maybeKey = {};\r\n        for (var propName in config)\r\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\r\n      } else maybeKey = config;\r\n      children &&\r\n        defineKeyPropWarningGetter(\r\n          maybeKey,\r\n          \"function\" === typeof type\r\n            ? type.displayName || type.name || \"Unknown\"\r\n            : type\r\n        );\r\n      return ReactElement(\r\n        type,\r\n        children,\r\n        maybeKey,\r\n        getOwner(),\r\n        debugStack,\r\n        debugTask\r\n      );\r\n    }\r\n    function validateChildKeys(node) {\r\n      \"object\" === typeof node &&\r\n        null !== node &&\r\n        node.$$typeof === REACT_ELEMENT_TYPE &&\r\n        node._store &&\r\n        (node._store.validated = 1);\r\n    }\r\n    var React = require(\"next/dist/compiled/react\"),\r\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\r\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\r\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\r\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\r\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\r\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\r\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\r\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\r\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\r\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\r\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\r\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\r\n      ReactSharedInternals =\r\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\r\n      hasOwnProperty = Object.prototype.hasOwnProperty,\r\n      isArrayImpl = Array.isArray,\r\n      createTask = console.createTask\r\n        ? console.createTask\r\n        : function () {\r\n            return null;\r\n          };\r\n    React = {\r\n      react_stack_bottom_frame: function (callStackForError) {\r\n        return callStackForError();\r\n      }\r\n    };\r\n    var specialPropKeyWarningShown;\r\n    var didWarnAboutElementRef = {};\r\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\r\n      React,\r\n      UnknownOwner\r\n    )();\r\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\r\n    var didWarnAboutKeySpread = {};\r\n    exports.Fragment = REACT_FRAGMENT_TYPE;\r\n    exports.jsxDEV = function (type, config, maybeKey, isStaticChildren) {\r\n      var trackActualOwner =\r\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\r\n      return jsxDEVImpl(\r\n        type,\r\n        config,\r\n        maybeKey,\r\n        isStaticChildren,\r\n        trackActualOwner\r\n          ? Error(\"react-stack-top-frame\")\r\n          : unknownOwnerDebugStack,\r\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\r\n      );\r\n    };\r\n  })();\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/Desktop/Work/stockforecaster/frontend/node_modules/next/dist/compiled/react/jsx-dev-runtime.js"],"sourcesContent":["'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-dev-runtime.production.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');\r\n}\r\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA;;KAEO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}}]
}